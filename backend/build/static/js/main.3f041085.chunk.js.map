{"version":3,"sources":["services/deliveries.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","parametersObject","params","address","sessiontoken","Inputs","total","payment","handleAddress","handleTotal","handlePayment","className","value","onChange","placeholder","AddButtons","handleClick","handleTip","type","onClick","Display","deliveries","handleDelete","handleUpdate","handleSave","map","delivery","key","showUpdate","update","Pay","pay","tips","parseFloat","toFixed","Method","method","handleMethod","Update","App","useState","setDeliveries","setAddress","setTotal","setPayment","setMethod","setTips","setUpdate","save","setSave","predictions","setPredictions","parseInt","Math","random","setSessiontoken","useEffect","deliveryService","initialDeliveries","event","target","Number","isInteger","window","alert","newDelivery","concat","result","prediction","description","console","log","totalTips","currentTarget","confirm","filter","find","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3f041085.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/deliveries'\r\nconst mapsUrl = '/api/predictions'\r\nconst key = 'AIzaSyDwdKdt1Sn0CmERazHNs1Mn8wwG9pqOVCI'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst autocomplete = (parametersObject) => {\r\n    const request = axios.get(mapsUrl, {\r\n        params: {\r\n            address: parametersObject.address,\r\n            sessiontoken: parametersObject.sessiontoken\r\n        }\r\n    })\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, update, remove, autocomplete}","import React, { useState, useEffect } from 'react'\nimport './App.css'\nimport deliveryService from './services/deliveries'\nimport PlacesAutoComplete from 'react-places-autocomplete'\n\nconst Inputs = ({ address, total, payment, handleAddress, handleTotal, handlePayment }) => {\n  return (\n    <div className=\"center\">\n      <div>\n        <label>Address: </label><input value={address} onChange={handleAddress} />\n      </div>\n      <div>\n      <label>Total: </label><input placeholder=\"$0.00\" value={total} onChange={handleTotal} />\n      </div>\n      <div>\n      <label>Payment/Tip: </label><input placeholder=\"$0.00\" value={payment} onChange={handlePayment} />\n      </div>\n    </div>\n  )\n}\n\nconst AddButtons = ({handleClick, handleTip}) => {\n  return (\n    <div className=\"center\">\n      <button className=\"add\" type=\"submit\" onClick={handleClick}><b>Add Delivery</b></button>\n      <button className=\"add\" type=\"submit\" onClick={handleTip}><b>Add Tip</b></button>\n    </div>\n  )\n}\n\nconst Display = ({ deliveries, handleDelete, handleUpdate, handleSave, address, total, payment, handleAddress, handlePayment, handleTotal }) => {\n  return (\n    <ol>\n      {deliveries.map(delivery => \n        <li className=\"list\" key={delivery.id}>\n          <div className=\"top\"><b>Address: {delivery.address}</b></div> <div className=\"center\">Total: ${delivery.total}</div> <div className=\"center\">Payment: ${delivery.payment}</div><button className=\"add\" value={delivery.id} onClick={handleUpdate} ><b>Update</b></button><button className=\"delete\" value={delivery.id} onClick={handleDelete} ><b>Delete</b></button>\n          <Update showUpdate={delivery.update} handleUpdate={handleUpdate} id={delivery.id} delivery={delivery} handleSave={handleSave} address={address} total={total} payment={payment} handleAddress={handleAddress} handleTotal={handleTotal} handlePayment={handlePayment} />\n        </li>)}\n    </ol>\n  )\n}\n\nconst Pay = ({ deliveries, tips }) => {\n  let pay = 0 + tips\n  deliveries.map(delivery => pay += (parseFloat(delivery.payment) - parseFloat(delivery.total)))\n  return (\n    <div className=\"center\">\n      <h2>${pay.toFixed(2)}</h2>\n    </div>\n  )\n}\n\nconst Method = ({ method, handleMethod, address, total, payment, handleClick, handleAddress, handleTotal, handlePayment, handleTip, deliveries, tips, handleDelete, handleUpdate, handleSave }) => {\n  if (method) {\n    return (\n      <div className=\"div-method\">\n        <button onClick={handleMethod} value=\"Ticket\" className=\"method-selected\">Ticket</button>\n        <button onClick={handleMethod} value=\"Previous Deliveries\" className=\"method\">Previous Deliveries</button>\n        <Inputs address={address} total={total} payment={payment} handleClick={handleClick} handleAddress={handleAddress} handleTotal={handleTotal} handlePayment={handlePayment} />\n        <AddButtons handleClick={handleClick} handleTip={handleTip} />\n        <Pay deliveries={deliveries} tips={tips} />\n      </div>\n    )\n  }\n  return (\n    <div className=\"div-method\">\n      <button onClick={handleMethod} value=\"Ticket\" className=\"method\">Ticket</button>\n      <button onClick={handleMethod} value=\"Previous Deliveries\" className=\"method-selected\">Previous Deliveries</button>\n      <Display address={address} total={total} payment={payment} handleAddress={handleAddress} handleTotal={handleTotal} handlePayment={handlePayment} deliveries={deliveries} handleDelete={handleDelete} handleUpdate={handleUpdate} handleSave={handleSave} />\n    </div>\n  )\n}\n\nconst Update = ({ showUpdate, handleUpdate, id, address, total, payment, handleAddress, handleTotal, handlePayment, delivery, handleSave }) => {\n  if (showUpdate) {\n    return (\n      <div className=\"center\">\n        <Inputs address={address} total={total} payment={payment} handleAddress={handleAddress} handleTotal={handleTotal} handlePayment={handlePayment} delivery={delivery} />\n        <div>\n          <button className=\"add\" type=\"submit\" onClick={handleSave} value={id}>Save</button>\n        </div>\n      </div>\n    )\n  }\n  return (\n    null\n  )\n}\n\nconst App = () => {\n  const [ deliveries, setDeliveries ] = useState([])\n  const [ address, setAddress ] = useState('')\n  const [ total, setTotal ] = useState('')\n  const [ payment, setPayment ] = useState('')\n  const [ method, setMethod ] = useState(true)\n  const [ tips, setTips ] = useState(0)\n  const [ update, setUpdate ] = useState(false)\n  const [ save, setSave ] = useState(false)\n  const [ predictions, setPredictions ] = useState([])\n  const [ sessiontoken, setSessiontoken ] = useState(parseInt(Math.random() * 10000000))\n\n  useEffect(() => {\n    deliveryService\n    .getAll()\n    .then(initialDeliveries => {\n      setDeliveries(initialDeliveries)\n    })\n  }, [save])\n\n  const handleAddress = (event) => {\n    setAddress(event.target.value)\n    \n    const params = {\n      address: address,\n      sessiontoken: sessiontoken\n    }\n\n    deliveryService\n    .autocomplete(params)\n    .then(result => {\n      setPredictions(result.predictions.map(prediction => prediction.description))\n    })\n    console.log(predictions)\n  }\n\n  const handleTotal = (event) => {\n    setTotal(event.target.value)\n  }\n\n  const handlePayment = (event) => {\n    setPayment(event.target.value)\n  }\n\n  const handleMethod = (event) => {\n    if (method && event.target.value === \"Ticket\") {\n      return\n    }\n    else if (method === false && event.target.value === \"Previous Deliveries\") {\n      return\n    }\n    setMethod(!method)\n    setAddress('')\n    setTotal('')\n    setPayment('')\n  }\n\n  const handleTip = (event) => {\n    if (!Number.isInteger(parseInt(payment))) {\n      window.alert('Enter a valid input for tip')\n      setPayment('')\n      return\n    }\n    const totalTips = tips + parseFloat(payment)\n    setTips(totalTips)\n    setPayment('')\n  }\n\n  const handleDelete = (event) => {\n    const id = event.currentTarget.value\n    if (window.confirm('Are you sure you want to delete this delivery?')) {\n      deliveryService\n        .remove(id)\n        .then(() => {\n          setDeliveries(deliveries.filter(delivery => delivery.id !== id))\n        })\n    }\n  }\n\n  const handleUpdate = (event) => {\n    const id = event.currentTarget.value\n    deliveries.map(delivery => delivery.id !== id ? delivery.update = false : delivery.update = !delivery.update)\n    setUpdate(!update)\n    setAddress('')\n    setTotal('')\n    setPayment('')\n  }\n\n  const handleSave = (event) => {\n    if (!Number.isInteger(parseInt(total)) || !Number.isInteger(parseInt(payment))) {\n      window.alert('Enter a valid input for total and payment')\n      setTotal('')\n      setPayment('')\n      return\n    }\n    const id = event.currentTarget.value\n    const delivery = deliveries.find(delivery => delivery.id === id)\n    delivery.update = !delivery.update\n    const newDelivery = {...delivery, address: address, total: total, payment: payment}\n    deliveryService\n      .update(id, newDelivery)\n      .then(newDelivery => {\n        setDeliveries(deliveries.map(delivery => delivery.id !== id ? delivery : newDelivery))\n        setSave(!save)\n      })\n      .catch(error => {\n        console.log('There was an error')\n      })\n      setAddress('')\n      setTotal('')\n      setPayment('')\n  }\n\n  const handleClick = (event) => {\n    if (!Number.isInteger(parseInt(total)) || !Number.isInteger(parseInt(payment))) {\n      window.alert('Enter a valid input for total and payment')\n      setTotal('')\n      setPayment('')\n      return\n    }\n\n    const newDelivery = {\n      address: address,\n      total: total,\n      payment: payment,\n      update: false\n    }\n\n    deliveryService\n      .create(newDelivery)\n      .then(newDelivery => {\n        setDeliveries(deliveries.concat(newDelivery))\n        setAddress('')\n        setTotal('')\n        setPayment('')\n        setSessiontoken(parseInt(Math.random() * 10000000))\n      })\n\n  }\n\n  return (\n    <div>\n      <div className=\"banner\">\n        <h1>Delivery Tracker</h1>\n      </div>\n      <Method handleMethod={handleMethod} method={method} address={address} total={total} payment={payment} handleClick={handleClick} handleAddress={handleAddress} handleTotal={handleTotal} handlePayment={handlePayment} handleTip={handleTip} deliveries={deliveries} tips={tips} handleDelete={handleDelete} handleUpdate={handleUpdate} update={update} handleSave={handleSave} />\n    </div>\n  )\n}\n\nexport default App","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from './App.js'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}