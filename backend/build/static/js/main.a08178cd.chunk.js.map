{"version":3,"sources":["services/deliveries.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","parametersObject","params","address","sessiontoken","Inputs","total","payment","handleAddress","handleTotal","handlePayment","predictions","classname","length","className","value","onChange","map","prediction","key","description","defaultValue","slice","onClick","placeholder","AddButtons","handleClick","handleTip","type","Display","deliveries","handleDelete","handleUpdate","handleSave","delivery","showUpdate","update","Pay","pay","tips","parseFloat","toFixed","Method","method","handleMethod","Update","App","useState","setDeliveries","setAddress","setTotal","setPayment","setMethod","setTips","setUpdate","save","setSave","setPredictions","parseInt","Math","random","setSessiontoken","useEffect","deliveryService","initialDeliveries","result","console","log","event","target","Number","isInteger","window","alert","newDelivery","concat","totalTips","currentTarget","confirm","filter","find","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a08178cd.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/deliveries'\r\nconst mapsUrl = '/api/predictions'\r\nconst key = 'AIzaSyDwdKdt1Sn0CmERazHNs1Mn8wwG9pqOVCI'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst autocomplete = (parametersObject) => {\r\n    const request = axios.get(mapsUrl, {\r\n        params: {\r\n            address: parametersObject.address,\r\n            sessiontoken: parametersObject.sessiontoken\r\n        }\r\n    })\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, update, remove, autocomplete}","import React, { useState, useEffect } from 'react'\nimport './App.css'\nimport deliveryService from './services/deliveries'\n\nconst Inputs = ({ address, total, payment, handleAddress, handleTotal, handlePayment, predictions, classname }) => {\n  if (predictions.length > 1 && address.length > 0) {\n    return (\n      <div className=\"center\">\n        <div>\n          <label>Address: </label><input value={address} onChange={handleAddress} />\n          <div className=\"center\">\n            <ul className={classname}>\n              {predictions.map(prediction => <li className=\"suggestion\" key={prediction.description} >\n                <input className=\"no-show\" defaultValue={prediction.description.slice(0, -9)} onClick={handleAddress} />\n              </li>)}\n            </ul>\n          </div>\n        </div>\n        <div>\n        <label>Total: </label><input placeholder=\"$0.00\" value={total} onChange={handleTotal} />\n        </div>\n        <div>\n        <label>Payment/Tip: </label><input placeholder=\"$0.00\" value={payment} onChange={handlePayment} />\n        </div>\n      </div>\n    )\n  }\n  return (\n    <div className=\"center\">\n      <div>\n        <label>Address: </label><input value={address} onChange={handleAddress} />\n      </div>\n      <div>\n      <label>Total: </label><input placeholder=\"$0.00\" value={total} onChange={handleTotal} />\n      </div>\n      <div>\n      <label>Payment/Tip: </label><input placeholder=\"$0.00\" value={payment} onChange={handlePayment} />\n      </div>\n    </div>\n  )\n}\n\nconst AddButtons = ({handleClick, handleTip}) => {\n  return (\n    <div className=\"center\">\n      <button className=\"add\" type=\"submit\" onClick={handleClick}><b>Add Delivery</b></button>\n      <button className=\"add\" type=\"submit\" onClick={handleTip}><b>Add Tip</b></button>\n    </div>\n  )\n}\n\nconst Display = ({ deliveries, handleDelete, handleUpdate, handleSave, address, total, payment, handleAddress, handlePayment, handleTotal, predictions }) => {\n  return (\n    <ol>\n      {deliveries.map(delivery => \n        <li className=\"list\" key={delivery.id} >\n          <div className=\"top\"><b>Address: {delivery.address}</b></div> <div className=\"center\">Total: ${delivery.total}</div> <div className=\"center\">Payment: ${delivery.payment}</div><button className=\"add\" value={delivery.id} onClick={handleUpdate} ><b>Update</b></button><button className=\"delete\" value={delivery.id} onClick={handleDelete} ><b>Delete</b></button>\n          <Update showUpdate={delivery.update} handleUpdate={handleUpdate} id={delivery.id} delivery={delivery} handleSave={handleSave} address={address} total={total} payment={payment} handleAddress={handleAddress} handleTotal={handleTotal} handlePayment={handlePayment} predictions={predictions} />\n        </li>)}\n    </ol>\n  )\n}\n\nconst Pay = ({ deliveries, tips }) => {\n  let pay = 0 + tips\n  deliveries.map(delivery => pay += (parseFloat(delivery.payment) - parseFloat(delivery.total)))\n  return (\n    <div className=\"center\">\n      <h2>${pay.toFixed(2)}</h2>\n    </div>\n  )\n}\n\nconst Method = ({ method, handleMethod, address, total, payment, handleClick, handleAddress, handleTotal, handlePayment, handleTip, deliveries, tips, handleDelete, handleUpdate, handleSave, predictions }) => {\n  if (method) {\n    return (\n      <div className=\"div-method\">\n        <button onClick={handleMethod} value=\"Ticket\" className=\"method-selected\">Ticket</button>\n        <button onClick={handleMethod} value=\"Previous Deliveries\" className=\"method\">Previous Deliveries</button>\n        <Inputs address={address} total={total} payment={payment} handleClick={handleClick} handleAddress={handleAddress} handleTotal={handleTotal} handlePayment={handlePayment} predictions={predictions} />\n        <AddButtons handleClick={handleClick} handleTip={handleTip} />\n        <Pay deliveries={deliveries} tips={tips} />\n      </div>\n    )\n  }\n  return (\n    <div className=\"div-method\">\n      <button onClick={handleMethod} value=\"Ticket\" className=\"method\">Ticket</button>\n      <button onClick={handleMethod} value=\"Previous Deliveries\" className=\"method-selected\">Previous Deliveries</button>\n      <Display address={address} total={total} payment={payment} handleAddress={handleAddress} handleTotal={handleTotal} handlePayment={handlePayment} deliveries={deliveries} handleDelete={handleDelete} handleUpdate={handleUpdate} handleSave={handleSave} predictions={predictions} />\n    </div>\n  )\n}\n\nconst Update = ({ showUpdate, handleUpdate, id, address, total, payment, handleAddress, handleTotal, handlePayment, delivery, handleSave, predictions }) => {\n  if (showUpdate) {\n    const classname = \"update\"\n    return (\n      <div className=\"center\">\n        <Inputs address={address} total={total} payment={payment} handleAddress={handleAddress} handleTotal={handleTotal} handlePayment={handlePayment} delivery={delivery} predictions={predictions} classname={classname} />\n        <div>\n          <button className=\"add\" type=\"submit\" onClick={handleSave} value={id}>Save</button>\n        </div>\n      </div>\n    )\n  }\n  return (\n    null\n  )\n}\n\nconst App = () => {\n  const [ deliveries, setDeliveries ] = useState([])\n  const [ address, setAddress ] = useState('')\n  const [ total, setTotal ] = useState('')\n  const [ payment, setPayment ] = useState('')\n  const [ method, setMethod ] = useState(true)\n  const [ tips, setTips ] = useState(0)\n  const [ update, setUpdate ] = useState(false)\n  const [ save, setSave ] = useState(false)\n  const [ predictions, setPredictions ] = useState([])\n  const [ sessiontoken, setSessiontoken ] = useState(parseInt(Math.random() * 10000000))\n\n  useEffect(() => {\n    deliveryService\n    .getAll()\n    .then(initialDeliveries => {\n      setDeliveries(initialDeliveries)\n    })\n  }, [save])\n\n  useEffect(() => {\n    const params = {\n      address: address,\n      sessiontoken: sessiontoken\n    }\n    if (address.length > 0) {\n      deliveryService\n      .autocomplete(params)\n      .then(result => {\n        setPredictions(result.predictions)\n        console.log(predictions)\n      })\n    }\n  }, [address])\n\n  const handleAddress = (event) => {\n    setAddress(event.target.value)\n  }\n\n  const handleTotal = (event) => {\n    setTotal(event.target.value)\n  }\n\n  const handlePayment = (event) => {\n    setPayment(event.target.value)\n  }\n\n  const handleMethod = (event) => {\n    if (method && event.target.value === \"Ticket\") {\n      return\n    }\n    else if (method === false && event.target.value === \"Previous Deliveries\") {\n      return\n    }\n    setMethod(!method)\n    setAddress('')\n    setTotal('')\n    setPayment('')\n  }\n\n  const handleTip = (event) => {\n    if (!Number.isInteger(parseInt(payment))) {\n      window.alert('Enter a valid input for tip')\n      setPayment('')\n      return\n    }\n    const totalTips = tips + parseFloat(payment)\n    setTips(totalTips)\n    setPayment('')\n  }\n\n  const handleDelete = (event) => {\n    const id = event.currentTarget.value\n    if (window.confirm('Are you sure you want to delete this delivery?')) {\n      deliveryService\n        .remove(id)\n        .then(() => {\n          setDeliveries(deliveries.filter(delivery => delivery.id !== id))\n        })\n    }\n  }\n\n  const handleUpdate = (event) => {\n    const id = event.currentTarget.value\n    deliveries.map(delivery => delivery.id !== id ? delivery.update = false : delivery.update = !delivery.update)\n    setUpdate(!update)\n    setAddress('')\n    setTotal('')\n    setPayment('')\n  }\n\n  const handleSave = (event) => {\n    if (!Number.isInteger(parseInt(total)) || !Number.isInteger(parseInt(payment))) {\n      window.alert('Enter a valid input for total and payment')\n      setTotal('')\n      setPayment('')\n      return\n    }\n    const id = event.currentTarget.value\n    const delivery = deliveries.find(delivery => delivery.id === id)\n    delivery.update = !delivery.update\n    const newDelivery = {...delivery, address: address, total: total, payment: payment}\n    deliveryService\n      .update(id, newDelivery)\n      .then(newDelivery => {\n        setDeliveries(deliveries.map(delivery => delivery.id !== id ? delivery : newDelivery))\n        setSave(!save)\n      })\n      .catch(error => {\n        console.log('There was an error')\n      })\n      setAddress('')\n      setTotal('')\n      setPayment('')\n  }\n\n  const handleClick = (event) => {\n    if (!Number.isInteger(parseInt(total)) || !Number.isInteger(parseInt(payment))) {\n      window.alert('Enter a valid input for total and payment')\n      setTotal('')\n      setPayment('')\n      return\n    }\n\n    const newDelivery = {\n      address: address,\n      total: total,\n      payment: payment,\n      update: false\n    }\n\n    deliveryService\n      .create(newDelivery)\n      .then(newDelivery => {\n        setDeliveries(deliveries.concat(newDelivery))\n        setAddress('')\n        setTotal('')\n        setPayment('')\n        setSessiontoken(parseInt(Math.random() * 10000000))\n      })\n\n  }\n\n  return (\n    <div>\n      <div className=\"banner\">\n        <h1>Delivery Tracker</h1>\n      </div>\n      <Method handleMethod={handleMethod} method={method} address={address} total={total} payment={payment} handleClick={handleClick} handleAddress={handleAddress} handleTotal={handleTotal} handlePayment={handlePayment} handleTip={handleTip} deliveries={deliveries} tips={tips} handleDelete={handleDelete} handleUpdate={handleUpdate} update={update} handleSave={handleSave} predictions={predictions} />\n    </div>\n  )\n}\n\nexport default App","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from './App.js'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}