{"version":3,"sources":["services/deliveries.js","App.js","index.js"],"names":["axios","get","then","response","data","newObject","post","Ticket","address","total","payment","handleClick","handleAddress","handleTotal","handlePayment","handleTip","className","value","onChange","placeholder","type","onClick","Display","deliveries","map","delivery","key","id","Pay","pay","tips","parseFloat","toFixed","Method","method","handleMethod","App","useState","setDeliveries","setAddress","setTotal","setPayment","setMethod","setTips","useEffect","deliveryService","initialDeliveries","event","target","Number","isInteger","parseInt","window","alert","newDelivery","concat","totalTips","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5704e0d2.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/deliveries'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create}","import React, { useState, useEffect } from 'react'\nimport './App.css'\nimport deliveryService from './services/deliveries'\n\nconst Ticket = ({ address, total, payment, handleClick, handleAddress, handleTotal, handlePayment, handleTip }) => {\n  return (\n    <div className=\"center\">\n      <div>\n        <label>Address: </label><input value={address} onChange={handleAddress} />\n      </div>\n      <div>\n      <label>Total: </label><input placeholder=\"$0.00\" value={total} onChange={handleTotal} />\n      </div>\n      <div>\n      <label>Payment/Tip: </label><input placeholder=\"$0.00\" value={payment} onChange={handlePayment} />\n      </div>\n      <button className=\"add\" type=\"submit\" onClick={handleClick}><b>Add Delivery</b></button>\n      <button className=\"add\" type=\"submit\" onClick={handleTip}><b>Add Tip</b></button>\n    </div>\n  )\n}\n\nconst Display = ({ deliveries }) => {\n  return (\n    <ol>\n      {deliveries.map(delivery => <li className=\"list\" key={delivery.id}><div className=\"top\"><b>Address: {delivery.address}</b></div> <div className=\"center\">Total: ${delivery.total}</div> <div className=\"center\">Payment: ${delivery.payment}</div></li>)}\n    </ol>\n  )\n}\n\nconst Pay = ({ deliveries, tips }) => {\n  let pay = 0 + tips\n  deliveries.map(delivery => pay += (parseFloat(delivery.payment) - parseFloat(delivery.total)))\n  return (\n    <div className=\"center\">\n      <h2>${pay.toFixed(2)}</h2>\n    </div>\n  )\n}\n\nconst Method = ({ method, handleMethod, address, total, payment, handleClick, handleAddress, handleTotal, handlePayment, handleTip, deliveries, tips }) => {\n  if (method) {\n    return (\n      <div className=\"div-method\">\n        <button onClick={handleMethod} value=\"Ticket\" className=\"method-selected\">Ticket</button>\n        <button onClick={handleMethod} value=\"Previous Deliveries\" className=\"method\">Previous Deliveries</button>\n        <Ticket address={address} total={total} payment={payment} handleClick={handleClick} handleAddress={handleAddress} handleTotal={handleTotal} handlePayment={handlePayment} handleTip={handleTip} />\n        <Pay deliveries={deliveries} tips={tips} />\n      </div>\n    )\n  }\n  return (\n    <div className=\"div-method\">\n      <button onClick={handleMethod} value=\"Ticket\" className=\"method\">Ticket</button>\n      <button onClick={handleMethod} value=\"Previous Deliveries\" className=\"method-selected\">Previous Deliveries</button>\n      <Display deliveries={deliveries} />\n    </div>\n  )\n}\n\nlet id = 0\n\nconst App = () => {\n  const [ deliveries, setDeliveries ] = useState([])\n  const [ address, setAddress ] = useState('')\n  const [ total, setTotal ] = useState('')\n  const [ payment, setPayment ] = useState('')\n  const [ method, setMethod ] = useState(true)\n  const [ tips, setTips ] = useState(0)\n\n  useEffect(() => {\n    deliveryService\n    .getAll()\n    .then(initialDeliveries => {\n      setDeliveries(initialDeliveries)\n    })\n  }, [])\n\n  const handleAddress = (event) => {\n    setAddress(event.target.value)\n  }\n\n  const handleTotal = (event) => {\n    setTotal(event.target.value)\n  }\n\n  const handlePayment = (event) => {\n    setPayment(event.target.value)\n  }\n\n  const handleMethod = (event) => {\n    if (method && event.target.value === \"Ticket\") {\n      return\n    }\n    else if (method === false && event.target.value === \"Previous Deliveries\") {\n      return\n    }\n    setMethod(!method)\n  }\n\n  const handleTip = (event) => {\n    if (!Number.isInteger(parseInt(payment))) {\n      window.alert('Enter a valid input for tip')\n      setPayment('')\n      return\n    }\n    const totalTips = tips + parseFloat(payment)\n    setTips(totalTips)\n    setPayment('')\n  }\n\n  const handleClick = (event) => {\n    if (!Number.isInteger(parseInt(total)) || !Number.isInteger(parseInt(payment))) {\n      window.alert('Enter a valid input for total and payment')\n      setTotal('')\n      setPayment('')\n      return\n    }\n\n    const newDelivery = {\n      address: address,\n      total: total,\n      payment: payment\n    }\n\n    deliveryService\n      .create(newDelivery)\n      .then(newDelivery => {\n        setDeliveries(deliveries.concat(newDelivery))\n        setAddress('')\n        setTotal('')\n        setPayment('')\n      })\n\n  }\n\n  return (\n    <div>\n      <div className=\"banner\">\n        <h1>Delivery Tracker</h1>\n      </div>\n      <Method handleMethod={handleMethod} method={method} address={address} total={total} payment={payment} handleClick={handleClick} handleAddress={handleAddress} handleTotal={handleTotal} handlePayment={handlePayment} handleTip={handleTip} deliveries={deliveries} tips={tips} />\n      \n    </div>\n  )\n}\n\nexport default App","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from './App.js'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}